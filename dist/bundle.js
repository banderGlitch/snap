(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};function n(e,t,n){if("string"==typeof e)throw new Error(`An HTML element ("${String(e)}") was used in a Snap component, which is not supported by Snaps UI. Please use one of the supported Snap components.`);if(!e)throw new Error("A JSX fragment was used in a Snap component, which is not supported by Snaps UI. Please use one of the supported Snap components.");return e({...t,key:n})}function r(e){return Object.fromEntries(Object.entries(e).filter((([,e])=>void 0!==e)))}function o(e){return t=>{const{key:n=null,...o}=t;return{type:e,props:r(o),key:n}}}e.r(t),e.d(t,{onRpcRequest:()=>i});const s=o("Box"),a=o("Heading"),p=o("Text"),i=async({origin:e,request:t})=>{if("getWalletAddress"===t.method){const e=`0x${(await snap.request({method:"snap_getEntropy",params:{version:1}})).slice(2,42)}`;return snap.request({method:"snap_dialog",params:{type:"alert",content:(r=s,o={children:[n(a,{children:"Current wallet address?"}),n(p,{children:e})]},n(r,o,i))}})}throw new Error("Method not found.");var r,o,i};var d=exports;for(var u in t)d[u]=t[u];t.__esModule&&Object.defineProperty(d,"__esModule",{value:!0})})();